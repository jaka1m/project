#!/bin/bash
# Menu For Script
# Edition : Stable Edition V1.0
# (C) Copyright 2021-2022
# =========================================
# // Export Color & Information
export RED='\033[0;31m'
export GREEN='\033[0;32m'
export YELLOW='\033[0;33m'
export BLUE='\033[0;34m'
export PURPLE='\033[0;35m'
export CYAN='\033[0;36m'
export LIGHT='\033[0;37m'
export NC='\033[0m'
# COLOR VALIDATION
L1="\e[0m\e[1;77m"
NC='\033[0m'
magenta="\033[1;35m"
Green="\e[92;1m"
white="\033[1;37m"
blue="\033[36m"
red="\033[1;31m"
black="\033[1;40;30m"
yellow="\033[1;33m"
cyan="\033[1;36m"
reset="\033[0m"
bgyellow="\033[1;43;33m"
bgwhite="\033[1;47;37m"
bru="\033[0;36m"
c0=${reset}
c1=${magenta}
c2=${BLUE}
c3=${white}
c4=${BLUE}
c5=${BLUE}
c6=${yellow}
c7=${cyan}
c8=${black}
c9=${bgyellow}
c10=${bgwhite}
c11=${bru}
clear

# // Export Banner Status Information
export EROR="[${BLUE} ERROR ${NC}]"
export INFO="[${YELLOW} INFO ${NC}]"
export OKEY="[${BLUE} OKEY ${NC}]"
export PENDING="[${YELLOW} PENDING ${NC}]"
export SEND="[${YELLOW} SEND ${NC}]"
export RECEIVE="[${YELLOW} RECEIVE ${NC}]"

# // Exporting URL Host
export Server_URL="raw.githubusercontent.com/jaka1m/project/main"
export Server_URLL="raw.githubusercontent.com/jaka1m/perizinan/main"
export Server_Port="443"
export Server_IP="underfined"
export Script_Mode="Stable"
export Auther="geovpn"

# // Exporting IP Address
export IP=$( curl -sS ipinfo.io/ip )

# // Exporting Network Interface
export NETWORK_IFACE="$(ip route show to default | awk '{print $5}')"

MYIP=$(curl -sS ipv4.icanhazip.com)
ISP=$(cat /etc/xray/isp)
CITY=$(cat /etc/xray/city)
domain=$(cat /etc/xray/domain)
uptime="$(uptime -p | cut -d " " -f 2-10)"
RAM=$(free -m | awk 'NR==2 {print $2}')
USAGERAM=$(free -m | awk 'NR==2 {print $3}')
MEMOFREE=$(printf '%-1s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
LOADCPU=$(printf '%-0.00001s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
MODEL=$(cat /etc/os-release | grep -w PRETTY_NAME | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/PRETTY_NAME//g')
CORE=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
DATEVPS=$(date +'%d/%m/%Y')
TIMEZONE=$(printf '%(%H:%M:%S)T')
SERONLINE=$(uptime -p | cut -d " " -f 2-10000)
clear

# // Validate Result ( 1 )
touch /etc/${Auther}/license.key
export Your_License_Key="$( cat /etc/${Auther}/license.key | awk '{print $1}' )"
export Validated_Your_License_Key_With_Server="$( curl -s https://${Server_URLL}/registered.txt | grep -w $Your_License_Key | head -n1 | cut -d ' ' -f 1 )"
if [[ "$Validated_Your_License_Key_With_Server" == "$Your_License_Key" ]]; then
    validated='true'
else
    echo -e "${EROR} License Key Not Valid"
    exit 1
fi

# // Checking Script Expired
exp=$( curl -s https://${Server_URLL}/registered.txt | grep -w $Your_License_Key | cut -d ' ' -f 4 )
now=`date -d "0 days" +"%Y-%m-%d"`
expired_date=$(date -d "$exp" +%s)
now_date=$(date -d "$now" +%s)
sisa_hari=$(( ($expired_date - $now_date) / 86400 ))
if [[ $sisa_hari -lt 0 ]]; then
    echo $sisa_hari > /etc/${Auther}/license-remaining-active-days.db
    echo -e "${EROR} Your License Key Expired ( $sisa_hari Days )"
    exit 1
else
    echo $sisa_hari > /etc/${Auther}/license-remaining-active-days.db
fi

# // Clear
clear
clear && clear && clear
clear;clear;clear

# // License Status
if [[ $( cat /etc/${Auther}/license-remaining-active-days.db | awk '{print $1}' ) -lt 0 ]]; then
    export Status_License="${RED}Not Activated"
else
    export Status_License="${GREEN}Activated"
fi

# // Exporting RED BG
export RED_BG='\e[41m'

# // Exporting Addons Tools
export End_License=$( curl -s https://${Server_URLL}/registered.txt | grep -w $Your_License_Key | cut -d ' ' -f 4 | awk '{print $1}' );
export Start_License=$( curl -s https://${Server_URLL}/registered.txt | grep -w $Your_License_Key | cut -d ' ' -f 3 | awk '{print $1}' );
export Issue_License=$( curl -s https://${Server_URLL}/registered.txt | grep -w $Your_License_Key | cut -d ' ' -f 9-100 | awk '{print $1}' );
export Limit_License=$( curl -s https://${Server_URLL}/registered.txt | grep -w $Your_License_Key | cut -d ' ' -f 2 | awk '{print $1}' );
export Sekarang=`date -d "0 days" +"%Y-%m-%d"`
export Tanggal_Expired_Dalam_Hitungan_Detik=$(date -d "$End_License" +%s)
export Tanggal_Sekarang_Dalam_Hitungan_Detik=$(date -d "$Sekarang" +%s)
export Sisa_Hari_Masa_Aktif=$(( ($Tanggal_Expired_Dalam_Hitungan_Detik - $Tanggal_Sekarang_Dalam_Hitungan_Detik) / 86400 ))

# // Exporting IP Address
export IP=$( curl -s https://ipinfo.io/ip/ )
# // SSH
ssh_service=$(/etc/init.d/ssh status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
openvpn_service="$(systemctl show openvpn.service --no-page)"
oovpn=$(echo "${openvpn_service}" | grep 'ActiveState=' | cut -f2 -d=)
dropbear_status=$(/etc/init.d/dropbear status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
haproxy_service=$(systemctl status haproxy | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
fail2ban_service=$(/etc/init.d/fail2ban status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
cron_service=$(/etc/init.d/cron status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
udp1_service=$(systemctl status udp-mini-1 | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
udp2_service=$(systemctl status udp-mini-2 | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
udp3_service=$(systemctl status udp-mini-3 | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
Iptables=$(systemctl status netfilter-persistent | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
RClocal=$(systemctl status rc-local | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
Autorebot=$(systemctl status rc-local | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
UdpSSH=$(systemctl status udp | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')

openssh=$( systemctl status ssh | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $openssh == "running" ]]; then
    status_openssh="${GREEN}Online$NC${BLUE} │$NC"
else
    status_openssh="${GREEN}Offline${NC} "
fi

# // SSH Websocket Proxy
ssh_ws=$( systemctl status ws | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $ssh_ws == "running" ]]; then
    status_ws_epro="${GREEN}Online$NC${BLUE} │$NC"
else
    status_ws_epro="${GREEN}Offline${NC} "
fi

# // Trojan Proxy
ss=$( systemctl status xray | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $ss == "running" ]]; then
    status_ss="${GREEN}Online$NC${BLUE} │$NC"
else
    status_ss="${GREEN}Offline${NC} "
fi

# // NGINX
nginx=$( systemctl status nginx | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $nginx == "running" ]]; then
    status_nginx="${GREEN}Online$NC${BLUE} │$NC"
else
    status_nginx="${GREEN}Offline${NC} "
fi

# STATUS SERVICE IPTABLES
if [[ $Iptables == "exited" ]]; then
    status_galo="${GREEN}Online$NC${BLUE} │$NC"
else
    status_galo="${GREEN}Offline${NC}"
fi

# STATUS SERVICE  SSH 
if [[ $ssh_service == "running" ]]; then 
   status_ssh="${GREEN}Online$NC${BLUE} │$NC"
else
   status_ssh="${GREEN}Offline${NC} "
fi

# STATUS OHP SSH
#if [[ $ohr == "running" ]]; then 
 #  sohr="${GREEN}Online${NC}${NC}"
#else
 #  sohr="${GREEN}Offline${NC} ${NC}"
#fi

# STATUS SERVICE OPENVPN
if [[ $oovpn == "active" ]]; then
  status_openvpn="${GREEN}Online$NC${BLUE} │$NC"
else
  status_openvpn="${GREEN}Offline${NC} "
fi

# STATUS SERVICE DROPBEAR
if [[ $dropbear_status == "running" ]]; then 
   status_beruangjatuh="${GREEN}Online$NC${BLUE} │$NC"
else
   status_beruangjatuh="${GREEN}Offline${NC} ${NC}"
fi

# STATUS SERVICE HAPROXY
if [[ $haproxy_service == "running" ]]; then 
   status_haproxy="${GREEN}Online$NC${BLUE} │$NC"
else
   status_haproxy="${GREEN}Offline${NC} "
fi

# STATUS SERVICE  SQUID 
#if [[ $squid_service == "running" ]]; then 
  # status_squid="${GREEN}Online${NC} ( No Etror )"
#else
  # status_squid="${GREEN}Offline${NC} "
#fi

# STATUS SERVICE  FAIL2BAN 
if [[ $fail2ban_service == "running" ]]; then 
   status_fail2ban="${GREEN}Online$NC${BLUE} │$NC"
else
   status_fail2ban="${GREEN}Offline${NC} "
fi

# STATUS SERVICE  CRONS 
if [[ $cron_service == "running" ]]; then 
   status_cron="${GREEN}Online$NC${BLUE} │$NC"
else
   status_cron="${GREEN}Offline${NC} "
fi

# STATUS SERVICE  BADVPN 1
if [[ $udp1_service == "running" ]]; then 
   status_udp1="${GREEN}Online$NC${BLUE} │$NC"
else
   status_udp1="${GREEN}Offline${NC} "
fi

# STATUS SERVICE  BADVPN 2
if [[ $udp2_service == "running" ]]; then 
   status_udp2="${GREEN}Online$NC${BLUE} │$NC"
else
   status_udp2="${GREEN}Offline${NC} "
fi

# STATUS SERVICE  BADVPN 3
if [[ $udp3_service == "running" ]]; then 
   status_udp3="${GREEN}Online$NC${BLUE} │$NC"
else
   status_udp3="${GREEN}Offline${NC} "
fi

if [[ $RClocal == "exited" ]]; then
    status_galoo="${GREEN}Online$NC${BLUE} │$NC"
else
    status_galoo="${GREEN}Offline${NC}"
fi

if [[ $Autorebot == "exited" ]]; then
    status_galooo="${GREEN}Online$NC${BLUE} │$NC"
else
    status_galooo="${GREEN}Offline${NC}"
fi

# STATUS SERVICE  SSH UDP 
if [[ $UdpSSH == "running" ]]; then 
   status_udp="${GREEN}Online$NC${BLUE} │$NC"
else
   status_udp="${GREEN}Offline${NC} "
fi

# // Running Function 
clear
echo -e " \033[0;34m╭════════════════════════════════════════════╮${NC}"
echo -e " \033[0;34m│$NC$L1\033[41m              BASIC INFORMATION             $NC\033[0;34m│$NC"
echo -e " \033[0;34m╰════════════════════════════════════════════╯${NC}"
echo -e " ${BLUE}╭════════════════════════════════════════════╮$NC"
echo -e " \033[0;34m│$NC$L1 Sever Uptime      ${BLUE} = ${NC}$( uptime -p  | cut -d " " -f 2-10000 ) ${NC}"
echo -e " \033[0;34m│$NC$L1 Current Time      ${BLUE} = ${NC}$( date -d "0 days" +"%d-%m-%Y | %X" )${NC}"
echo -e " \033[0;34m│$NC$L1 Operating System  ${BLUE} = ${NC}$MODEL${NC}"
echo -e " \033[0;34m│$NC$L1 Current Domain    ${BLUE} = ${NC}$( cat /etc/xray/domain )${NC}"
echo -e " \033[0;34m│$NC$L1 Server IP         ${BLUE} = ${NC}${IP}${NC}"
echo -e " \033[0;34m│$NC$L1 License Issued to ${BLUE} = ${NC}${Issue_License}${NC}"
echo -e " \033[0;34m│$NC$L1 License Start     ${BLUE} = ${NC}${Start_License}${NC}"
echo -e " \033[0;34m│$NC$L1 License Limit     ${BLUE} = ${NC}${Limit_License} VPS${NC}"
echo -e " \033[0;34m│$NC$L1 License Expired   ${CYAN} =${NC} ${L1}${End_License} (${GREEN} $(if [[ ${Sisa_Hari_Masa_Aktif} -lt 5 ]]; then
echo -e "\033[0;34m $NC$NC ${RED}${Sisa_Hari_Masa_Aktif} Days Left ${NC}"; else
echo -e "\033[0;34m$NC${GREEN}${Sisa_Hari_Masa_Aktif} ${NC}${L1}Days Left"; fi
)${NC} )"
echo -e " \033[0;34m│$NC$L1 License Key Status${BLUE} = ${NC}${Status_License}${NC}"
echo -e " ${BLUE}╰════════════════════════════════════════════╯$NC"
echo -e " \033[0;34m╭════════════════════════════════════════════╮${NC}"
echo -e " \033[0;34m│$NC$L1\033[41m             SERVICE INFORMATION            $NC\033[0;34m│$NC"
echo -e " \033[0;34m╰════════════════════════════════════════════╯${NC}"
echo -e " ${BLUE}╭════════════════════════════════════════════╮$NC"
echo -e " ${BLUE}│ ${NC}Service SSH / TUN                 $blue=$NC $status_ssh"
echo -e " ${BLUE}│ ${NC}Service SSH UDP                   $blue=$NC $status_udp"
echo -e " ${BLUE}│ ${NC}Service OpenVPN                   $blue=$NC $status_openvpn"
echo -e " ${BLUE}│ ${NC}Service WS ePRO                   $blue=$NC $status_ws_epro"
echo -e " ${BLUE}│ ${NC}Service BadVPN 7100               $blue=$NC $status_udp1"
echo -e " ${BLUE}│ ${NC}Service BadVPN 7200               $blue=$NC $status_udp2"
echo -e " ${BLUE}│ ${NC}Service BadVPN 7300               $blue=$NC $status_udp3"
echo -e " ${BLUE}│ ${NC}Service Dropbear                  $blue=$NC $status_beruangjatuh"
echo -e " ${BLUE}│ ${NC}Service Haproxy                   $blue=$NC $status_haproxy"
echo -e " ${BLUE}│ ${NC}Service Fail2Ban                  $blue=$NC $status_fail2ban"
echo -e " ${BLUE}│ ${NC}Service Crons                     $blue=$NC $status_fail2ban"
echo -e " ${BLUE}│ ${NC}Service Nginx Webserver           $blue=$NC $status_nginx"
echo -e " ${BLUE}│ ${NC}Service Xray Vmess WS TLS         $blue=$NC $status_ss"
echo -e " ${BLUE}│ ${NC}Service Xray Vmess WS Non TLS     $blue=$NC $status_ss"
echo -e " ${BLUE}│ ${NC}Service Xray Vmess gRPC           $blue=$NC $status_ss"
echo -e " ${BLUE}│ ${NC}Service Xray Vless WS TLS         $blue=$NC $status_ss"
echo -e " ${BLUE}│ ${NC}Service Xray Vless WS Non TLS     $blue=$NC $status_ss"
echo -e " ${BLUE}│ ${NC}Service Xray Vless gRPC           $blue=$NC $status_ss"
echo -e " ${BLUE}│ ${NC}Service Xray Trojan WS            $blue=$NC $status_ss"
echo -e " ${BLUE}│ ${NC}Service Xray Trojan gRPC          $blue=$NC $status_ss"
echo -e " ${BLUE}│ ${NC}Service Xray Shadowsocks WS       $blue=$NC $status_ss"
echo -e " ${BLUE}│ ${NC}Service Xray Shadowsocks gRPC     $blue=$NC $status_ss"
echo -e " ${BLUE}│ ${NC}Service Iptables                  $blue=$NC $status_galo"
echo -e " ${BLUE}│ ${NC}Service RClocal                   $blue=$NC $status_galoo"
echo -e " ${BLUE}│ ${NC}Service Autoreboot                $blue=$NC $status_galooo"
echo -e " ${BLUE}╰════════════════════════════════════════════╯$NC"
echo -e " ${BLUE}╭════════════════════════════════════════════╮$NC"
echo -e " ${BLUE}│$NC$YELLOW             CONTACT SUPPORT / CS           $NC${BLUE}│$NC"
echo -e " ${BLUE}╰════════════════════════════════════════════╯$NC"
echo -e " ${BLUE}╭════════════════════════════════════════════╮$NC"
echo -e " ${BLUE}│$NC WHATSAPP   $blue= ${NC} 082339191527${NC}  "
echo -e " ${BLUE}│$NC TELEGRAM   $blue= ${NC} t.me/tau_samawa${NC}  "
echo -e " ${BLUE}╰════════════════════════════════════════════╯$NC"
echo ""
echo -e ""
        read -n 1 -s -r -p "Press any key to back on menu"

menu
echo ""
