#!/bin/bash
# //====================================================
# //	System Request:Debian 9+/Ubuntu 18.04+/20+
# //	Author:	Geo Project
# //	Dscription: Xray Menu Management
# //	email: admin@geolstore.net
# //  telegram: https://t.me/tau_samawa
# //====================================================

# // Root Checking
if [ "${EUID}" -ne 0 ]; then
		echo -e "${EROR} Please Run This Script As Root User !"
		exit 1
fi

# // Export Color & Information
export RED='\033[0;31m'
export GREEN='\033[0;32m'
export YELLOW='\033[0;33m'
export BLUE='\033[0;34m'
export PURPLE='\033[0;35m'
export CYAN='\033[0;36m'
export LIGHT='\033[0;37m'
export NC='\033[0m'
OR='\033[1;93m'
Lred='\e[91m'
LLgreen='\e[92m'
Lyellow='\e[93m'
yellow="\033[1;33m"
green="\e[92;1m"
yellow="\033[1;33m"
cyan="\033[1;36m"

# // Export Banner Status Information
export EROR="[${RED} ERROR ${NC}]"
export INFO="[${YELLOW} INFO ${NC}]"
export OKEY="[${GREEN} OKEY ${NC}]"
export PENDING="[${YELLOW} PENDING ${NC}]"
export SEND="[${YELLOW} SEND ${NC}]"
export RECEIVE="[${YELLOW} RECEIVE ${NC}]"

# // Export Align
export BOLD="\e[1m"
export WARNING="${RED}\e[5m"
export UNDERLINE="\e[4m"

# // Exporting URL Host
export Server_URLL="raw.githubusercontent.com/jaka1m/perizinan/main"
export Server_Port="443"
export Server_IP="underfined"
export Script_Mode="Stable"
export Auther="geovpn"
MYIP=$(curl -sS ipv4.icanhazip.com)
domain=$(cat /etc/xray/domain)

# // Exporting IP Address
export IP=$( curl -sS ipv4.icanhazip.com)

# // Exporting Network Interface
export NETWORK_IFACE="$(ip route show to default | awk '{print $5}')"

# // Validate Result ( 1 )
touch /etc/${Auther}/license.key
export Your_License_Key="$( cat /etc/${Auther}/license.key | awk '{print $1}' )"
export Validated_Your_License_Key_With_Server="$( curl -s https://${Server_URLL}/registered.txt | grep -w $Your_License_Key | head -n1 | cut -d ' ' -f 1 )"
if [[ "$Validated_Your_License_Key_With_Server" == "$Your_License_Key" ]]; then
    validated='true'
else
    echo -e "${EROR} License Key Not Valid"
    exit 1
fi

# // Checking Script Expired
exp=$( curl -s https://${Server_URLL}/registered.txt | grep -w $Your_License_Key | cut -d ' ' -f 4 )
now=`date -d "0 days" +"%Y-%m-%d"`
expired_date=$(date -d "$exp" +%s)
now_date=$(date -d "$now" +%s)
sisa_hari=$(( ($expired_date - $now_date) / 86400 ))
if [[ $sisa_hari -lt 0 ]]; then
    echo $sisa_hari > /etc/${Auther}/license-remaining-active-days.db
    echo -e "${EROR} Your License Key Expired ( $sisa_hari Days )"
    exit 1
else
    echo $sisa_hari > /etc/${Auther}/license-remaining-active-days.db
fi
clear
fun_bar() {
CMD[0]="$1"
CMD[1]="$2"
(
[[ -e $HOME/fim ]] && rm $HOME/fim
${CMD[0]} -y >/dev/null 2>&1
${CMD[1]} -y >/dev/null 2>&1
touch $HOME/fim
) >/dev/null 2>&1 &
tput civis
echo -ne "  \033[0;33mPlease Wait Loading \033[1;37m- \033[0;33m["
while true; do
for ((i = 0; i < 18; i++)); do
echo -ne "\033[0;32m#"
sleep 0.1s
done
[[ -e $HOME/fim ]] && rm $HOME/fim && break
echo -e "\033[0;33m]"
sleep 1s
tput cuu1
tput dl1
echo -ne "  \033[0;33mPlease Wait Loading \033[1;37m- \033[0;33m["
done
echo -e "\033[0;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
tput cnorm
}
res1() {
systemctl daemon-reload
}
res2() {
systemctl restart haproxy
}
res3() {
systemctl restart xray
}
res4() {
systemctl restart rc-local
}
res5() {
systemctl restart client
}
res6() {
systemctl restart server
}
res7() {
systemctl restart dropbear
}
res8() {
systemctl restart ws
}
res9() {
systemctl restart openvpn
}
res10() {
systemctl restart cron
}
res11() {
systemctl restart nginx
}
res12() {
systemctl restart netfilter-persistent
}
res13() {
systemctl restart squid
}
res14() {
systemctl restart badvpn1
systemctl restart badvpn2
systemctl restart badvpn3
}
clear
echo -e "\033[0;33m ┌──────────────────────────────────────────┐\033[0m"
echo -e "\033[0;33m │\033[0m          \033[0;32mRESTART SERVICE SERVER\033[0m          \033[0;33m|\033[0m"
echo -e "\033[0;33m └──────────────────────────────────────────┘\033[0m"
echo -e ""
echo -e "  \033[1;91m service daemon-reload\033[1;37m"
fun_bar 'res1'
echo -e "  \033[1;91m service restart haproxy\033[1;37m"
fun_bar 'res2'
echo -e "  \033[1;91m service restart xray\033[1;37m"
fun_bar 'res3'
echo -e "  \033[1;91m service restart rc-local\033[1;37m"
fun_bar 'res4'
echo -e "  \033[1;91m service restart client dns\033[1;37m"
fun_bar 'res5'
echo -e "  \033[1;91m service restart server dns\033[1;37m"
fun_bar 'res6'
echo -e "  \033[1;91m service restart dropbear\033[1;37m"
fun_bar 'res7'
echo -e "  \033[1;91m service restart websocket\033[1;37m"
fun_bar 'res8'
echo -e "  \033[1;91m service restart openvpn\033[1;37m"
fun_bar 'res9'
echo -e "  \033[1;91m service restart cron\033[1;37m"
fun_bar 'res10'
echo -e "  \033[1;91m service restart nginx\033[1;37m"
fun_bar 'res11'
echo -e "  \033[1;91m service restart iptables\033[1;37m"
fun_bar 'res12'
echo -e "  \033[1;91m service restart badvpn\033[1;37m"
fun_bar 'res14'
echo -e ""
echo ""
read -n 1 -s -r -p "Press any key to back on menu"
menu