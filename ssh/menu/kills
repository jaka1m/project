#!/bin/bash
# //====================================================
# //	System Request:Debian 9+/Ubuntu 18.04+/20+
# //	Author:	Geo Project
# //	Dscription: Xray Menu Management
# //	email: admin@geolstore.net
# //  telegram: https://t.me/tau_samawa
# //====================================================

# // Root Checking
if [ "${EUID}" -ne 0 ]; then
		echo -e "${EROR} Please Run This Script As Root User !"
		exit 1
fi

# // Export Color & Information
export RED='\033[0;31m'
export GREEN='\033[0;32m'
export YELLOW='\033[0;33m'
export BLUE='\033[0;34m'
export PURPLE='\033[0;35m'
export CYAN='\033[0;36m'
export LIGHT='\033[0;37m'
export NC='\033[0m'
OR='\033[1;93m'
Lred='\e[91m'
LLgreen='\e[92m'
Lyellow='\e[93m'
yellow="\033[1;33m"
green="\e[92;1m"
yellow="\033[1;33m"
cyan="\033[1;36m"

# // Export Banner Status Information
export EROR="[${RED} ERROR ${NC}]"
export INFO="[${YELLOW} INFO ${NC}]"
export OKEY="[${GREEN} OKEY ${NC}]"
export PENDING="[${YELLOW} PENDING ${NC}]"
export SEND="[${YELLOW} SEND ${NC}]"
export RECEIVE="[${YELLOW} RECEIVE ${NC}]"

# // Export Align
export BOLD="\e[1m"
export WARNING="${RED}\e[5m"
export UNDERLINE="\e[4m"

# // Exporting URL Host
export Server_URLL="raw.githubusercontent.com/jaka1m/perizinan/main"
export Server_Port="443"
export Server_IP="underfined"
export Script_Mode="Stable"
export Auther="geovpn"
MYIP=$(curl -sS ipv4.icanhazip.com)
domain=$(cat /etc/xray/domain)

# // Exporting IP Address
export IP=$( curl -sS ipinfo.io/ip )

# // Exporting Network Interface
export NETWORK_IFACE="$(ip route show to default | awk '{print $5}')"

# // Validate Result ( 1 )
touch /etc/${Auther}/license.key
export Your_License_Key="$( cat /etc/${Auther}/license.key | awk '{print $1}' )"
export Validated_Your_License_Key_With_Server="$( curl -s https://${Server_URLL}/registered.txt | grep -w $Your_License_Key | head -n1 | cut -d ' ' -f 1 )"
if [[ "$Validated_Your_License_Key_With_Server" == "$Your_License_Key" ]]; then
    validated='true'
else
    echo -e "${EROR} License Key Not Valid"
    exit 1
fi

# // Checking Script Expired
exp=$( curl -s https://${Server_URLL}/registered.txt | grep -w $Your_License_Key | cut -d ' ' -f 4 )
now=`date -d "0 days" +"%Y-%m-%d"`
expired_date=$(date -d "$exp" +%s)
now_date=$(date -d "$now" +%s)
sisa_hari=$(( ($expired_date - $now_date) / 86400 ))
if [[ $sisa_hari -lt 0 ]]; then
    echo $sisa_hari > /etc/${Auther}/license-remaining-active-days.db
    echo -e "${EROR} Your License Key Expired ( $sisa_hari Days )"
    exit 1
else
    echo $sisa_hari > /etc/${Auther}/license-remaining-active-days.db
fi
clear
source '/home/geo/var.txt'
TIME="10"
URL="https://api.telegram.org/bot$BOT_TOKEN/sendMessage"
cat /etc/passwd | grep "/home/" | cut -d":" -f1 >/root/user.txt
username1=($(cat "/root/user.txt"))
i="0"
if [ -e "/var/log/auth.log" ]; then
OS=1
LOG="/var/log/auth.log"
fi
if [ -e "/var/log/secure" ]; then
OS=2
LOG="/var/log/secure"
fi
for user in "${username1[@]}"; do
username[$i]=$(echo $user | sed 's/'\''//g')
jumlah[$i]=0
i=$i+1
done
cat $LOG | grep -i dropbear | grep -i "Password auth succeeded" >/tmp/log-db.txt
proc=($(ps aux | grep -i dropbear | awk '{print $2}'))
for PID in "${proc[@]}"; do
cat /tmp/log-db.txt | grep "dropbear\[$PID\]" >/tmp/log-db-pid.txt
NUM=$(cat /tmp/log-db-pid.txt | wc -l)
USER=$(cat /tmp/log-db-pid.txt | awk '{print $10}' | sed 's/'\''//g')
IP=$(cat /tmp/log-db-pid.txt | awk '{print $12}')
if [ $NUM -eq 1 ]; then
i=0
for user1 in "${username[@]}"; do
if [ "$USER" == "$user1" ]; then
jumlah[$i]=$(expr ${jumlah[$i]} + 1)
pid[$i]="${pid[$i]} $PID"
fi
i=$i+1
done
fi
done
cat $LOG | grep -i sshd | grep -i "Accepted password for" >/tmp/log-db.txt
data=($(ps aux | grep "\[priv\]" | sort -k 72 | awk '{print $2}'))
for PID in "${data[@]}"; do
cat /tmp/log-db.txt | grep "sshd\[$PID\]" >/tmp/log-db-pid.txt
NUM=$(cat /tmp/log-db-pid.txt | wc -l)
USER=$(cat /tmp/log-db-pid.txt | awk '{print $9}')
IP=$(cat /tmp/log-db-pid.txt | awk '{print $11}')
if [ $NUM -eq 1 ]; then
i=0
for user1 in "${username[@]}"; do
if [ "$USER" == "$user1" ]; then
jumlah[$i]=$(expr ${jumlah[$i]} + 1)
pid[$i]="${pid[$i]} $PID"
fi
i=$i+1
done
fi
done
for i in ${!username[*]}; do
slip=$(ls "/etc/ssh/" | grep -w "${username[$i]}")
if [[ -z ${slip} ]]; then
vmip="0"
else
vmip=$(cat /etc/ssh/${username[$i]})
fi
if [ ${jumlah[$i]} -gt $vmip ]; then
date=$(date +"%Y-%m-%d %X")
echo "$date - ${username[$i]} - ${jumlah[$i]}"
echo "$date - ${username[$i]} - ${jumlah[$i]}" >>/root/log-limit.txt
TEXT="
<code>◇━━━━━━━━━━━━━━◇</code>
<b>  ⚠️SSH OVPN NOTIF⚠️</b>
<b>     User Multi Login</b>
<code>◇━━━━━━━━━━━━━━◇</code>
<b>USERNAME :</b> <code>${username[$i]} </code>
<b>TOTAL IP :</b> <code>${jumlah[$i]} </code>
<code>◇━━━━━━━━━━━━━━◇</code>
<code>I REMOVE ACCOUNT</code>
<code>NO MULTI LOGINS!</code>
"
egrep "^${username[$i]}" /etc/passwd >/dev/null
passwd -l ${username[$i]}
curl -s --max-time $TIME -d "chat_id=$ADMIN&disable_web_page_preview=1&text=$TEXT&parse_mode=html" $URL >/dev/null
fi
done