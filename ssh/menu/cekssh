#!/bin/bash
# //====================================================
# //	System Request:Debian 9+/Ubuntu 18.04+/20+
# //	Author:	Geo Project
# //	Dscription: Xray Menu Management
# //	email: admin@geolstore.net
# //  telegram: https://t.me/tau_samawa
# //====================================================

# // Root Checking
if [ "${EUID}" -ne 0 ]; then
		echo -e "${EROR} Please Run This Script As Root User !"
		exit 1
fi

# // Export Color & Information
export RED='\033[0;31m'
export GREEN='\033[0;32m'
export YELLOW='\033[0;33m'
export BLUE='\033[0;34m'
export PURPLE='\033[0;35m'
export CYAN='\033[0;36m'
export LIGHT='\033[0;37m'
export NC='\033[0m'
OR='\033[1;93m'
Lred='\e[91m'
LLgreen='\e[92m'
Lyellow='\e[93m'
yellow="\033[1;33m"
green="\e[92;1m"
yellow="\033[1;33m"
cyan="\033[1;36m"

# // Export Banner Status Information
export EROR="[${RED} ERROR ${NC}]"
export INFO="[${YELLOW} INFO ${NC}]"
export OKEY="[${GREEN} OKEY ${NC}]"
export PENDING="[${YELLOW} PENDING ${NC}]"
export SEND="[${YELLOW} SEND ${NC}]"
export RECEIVE="[${YELLOW} RECEIVE ${NC}]"

# // Export Align
export BOLD="\e[1m"
export WARNING="${RED}\e[5m"
export UNDERLINE="\e[4m"

# // Exporting URL Host
export Server_URLL="raw.githubusercontent.com/jaka1m/perizinan/main"
export Server_Port="443"
export Server_IP="underfined"
export Script_Mode="Stable"
export Auther="geovpn"
MYIP=$(curl -sS ipv4.icanhazip.com)
domain=$(cat /etc/xray/domain)

# // Exporting IP Address
export IP=$( curl -sS ipinfo.io/ip )

# // Exporting Network Interface
export NETWORK_IFACE="$(ip route show to default | awk '{print $5}')"

# // Validate Result ( 1 )
touch /etc/${Auther}/license.key
export Your_License_Key="$( cat /etc/${Auther}/license.key | awk '{print $1}' )"
export Validated_Your_License_Key_With_Server="$( curl -s https://${Server_URLL}/registered.txt | grep -w $Your_License_Key | head -n1 | cut -d ' ' -f 1 )"
if [[ "$Validated_Your_License_Key_With_Server" == "$Your_License_Key" ]]; then
    validated='true'
else
    echo -e "${EROR} License Key Not Valid"
    exit 1
fi

# // Checking Script Expired
exp=$( curl -s https://${Server_URLL}/registered.txt | grep -w $Your_License_Key | cut -d ' ' -f 4 )
now=`date -d "0 days" +"%Y-%m-%d"`
expired_date=$(date -d "$exp" +%s)
now_date=$(date -d "$now" +%s)
sisa_hari=$(( ($expired_date - $now_date) / 86400 ))
if [[ $sisa_hari -lt 0 ]]; then
    echo $sisa_hari > /etc/${Auther}/license-remaining-active-days.db
    echo -e "${EROR} Your License Key Expired ( $sisa_hari Days )"
    exit 1
else
    echo $sisa_hari > /etc/${Auther}/license-remaining-active-days.db
fi
clear
if [ -e "/var/log/auth.log" ]; then
    LOG="/var/log/auth.log"
fi
if [ -e "/var/log/secure" ]; then
    LOG="/var/log/secure"
fi
touch /tmp/ssh
touch /tmp/drop
echo -e ""
echo -e " ${cyan}=======================================${NC}"
printf "\e[1;92m    ⚜⚜\e[0m\e[1;77m OpenSSH User Login Account \e[1;92m⚜⚜\e[0m\n"
echo -e " ${cyan}=======================================${NC}"
echo -e " \033[0;32m username     pid    ip.limit login.ip${NC}"
echo -e " ${cyan}=======================================${NC}"

cat /var/log/auth.log | grep -i sshd | grep -i "Accepted password for" >/tmp/login-db.txt
data=($(ps aux | grep "\[priv\]" | sort -k 72 | awk '{print $2}'))

for PID in "${data[@]}"; do
    cat /tmp/login-db.txt | grep "sshd\[$PID\]" >/tmp/login-db-pid.txt
    NUM=$(cat /tmp/login-db-pid.txt | wc -l)
    USER=$(cat /tmp/login-db-pid.txt | awk '{print $9}')
    IP=$(cat /tmp/login-db-pid.txt | awk '{print $11}')
    #if [ $NUM -eq 1 ]; then
    echo "$PID $USER $IP" >>/tmp/ssh
    split=$(cat /tmp/ssh)
    #fi
done
marimakan=($(cat /etc/ssh/.ssh.db | grep '^###' | cut -d ' ' -f 2 | sort | uniq))
if [[ ${split} != "" ]]; then
    for user in ${marimakan[@]}; do
        result=$(cat /tmp/ssh | grep -w "${user}" | wc -l)
        droptbr=$(cat /var/log/auth.log | grep -i dropbear | grep -i "Password auth succeeded" | cut -d ' ' -f 11 | grep -w "'""${user}""'" | wc -l)
        if [[ ${result} -gt 0 ]]; then
            if [[ -e /etc/ssh/${user} ]]; then
                ipl=$(cat /etc/ssh/${user})
            else
                ipl=""
            fi
            result2=$(cat /tmp/ssh | grep -w "${user}" | cut -d ' ' -f 2 | wc -l)
            if [[ ${result2} -gt 0 ]]; then

                if [[ -e /etc/ssh/${user} ]]; then
                    byte=$(cat /etc/ssh/${user})
                    printf "\e[1m  %-13s %-7s %-8s %2s\n\e[22m" " ${user}" "| ${result2}" "|  ${ipl}" "|  ${result}"
                    printf "$cyan %-13s %-7s %-8s %2s\n${cyan}${NC}" "======================================="
                fi
            fi
        fi
    done
fi
rm -rf /tmp/ssh

echo -e " ${cyan}=======================================${NC}"
printf "\e[1;92m    ⚜⚜\e[0m\e[1;77m Dropbear User Login Account \e[1;92m⚜⚜\e[0m\n"
echo -e " ${cyan}=======================================${NC}"
echo -e " \033[0;32m username     pid    ip.limit login.ip${NC}"
echo -e " ${cyan}=======================================${NC}"
data=($(ps aux | grep -i dropbear | awk '{print $2}'))
cat $LOG | grep -i dropbear | grep -i "Password auth succeeded" >/tmp/login-db.txt
for PID in "${data[@]}"; do
    cat /tmp/login-db.txt | grep "dropbear\[$PID\]" >/tmp/login-db-pid.txt
    NUM=$(cat /tmp/login-db-pid.txt | wc -l)
    USER=$(cat /tmp/login-db-pid.txt | awk '{print $10}')
    IP=$(cat /tmp/login-db-pid.txt | awk '{print $12}')
    #if [ $NUM -eq 1 ]; then
    echo "$PID $USER $IP" >>/tmp/drop
    split=$(cat /tmp/drop)
    #fi
done

marimakan=($(cat /etc/ssh/.ssh.db | grep '^###' | cut -d ' ' -f 2 | sort | uniq))
if [[ ${split} != "" ]]; then
    for user in ${marimakan[@]}; do
        result=$(cat /tmp/drop | grep -w "'""${user}""'" | wc -l)
        if [[ ${result} -gt 0 ]]; then
            if [[ -e /etc/ssh/${user} ]]; then
                ipl=$(cat /etc/ssh/${user})
            else
                ipl=""
            fi
            result2=$(cat /tmp/drop | grep -w "'""${user}""'" | cut -d ' ' -f 2 | wc -l)
            if [[ ${result2} -gt 0 ]]; then

                if [[ -e /etc/ssh/${user} ]]; then
                    byte=$(cat /etc/ssh/${user})
                    printf "\e[1m %-13s %-7s %-8s %2s\n\e[22m" " ${user}" "| ${result2}" "|  ${ipl}" "|  ${result}"
                    printf "$cyan %-13s %-7s %-8s %2s\n${cyan}${NC}" "======================================="
                fi
            fi
        fi
    done
fi
rm -rf /tmp/drop
echo " "
echo " #######################################"
echo " "
if [ -f "/etc/openvpn/server/openvpn-tcp.log" ]; then
    echo -e " ${cyan}=======================================${NC}"
    printf "\e[1;92m    ⚜⚜\e[0m\e[1;77m OpenVPN TCP User Login  \e[1;92m⚜⚜\e[0m\n"
    echo -e " ${cyan}=======================================${NC}"
    echo -e "\033[0;32m  Username  |  IP Address  |  Connected${NC}"
    echo -e " ${cyan}=======================================${NC}"

    cat /etc/openvpn/server/openvpn-tcp.log | grep -w "^CLIENT_LIST" | cut -d ',' -f 2,3,8 | sed -e 's/,/      /g' >/tmp/vpn-login-tcp.txt
    cat /tmp/vpn-login-tcp.txt
fi

if [ -f "/etc/openvpn/server/openvpn-udp.log" ]; then
    echo " "
    echo -e " ${cyan}=======================================${NC}"
    printf "\e[1;92m    ⚜⚜\e[0m\e[1;77m OpenVPN TCP User Login  \e[1;92m⚜⚜\e[0m\n"
    echo -e " ${cyan}=======================================${NC}"
    echo -e "\033[0;32m  Username  |  IP Address  |  Connected${NC}"
    echo -e " ${cyan}=======================================${NC}"

    cat /etc/openvpn/server/openvpn-udp.log | grep -w "^CLIENT_LIST" | cut -d ',' -f 2,3,8 | sed -e 's/,/      /g' >/tmp/vpn-login-udp.txt
    cat /tmp/vpn-login-udp.txt
fi
echo ""
read -n 1 -s -r -p "Press any key to back on menu"
m-sshws