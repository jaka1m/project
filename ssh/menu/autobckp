#!/bin/bash
# //====================================================
# //	System Request:Debian 9+/Ubuntu 18.04+/20+
# //	Author:	Geo Project
# //	Dscription: Xray Menu Management
# //	email: admin@geolstore.net
# //  telegram: https://t.me/tau_samawa
# //====================================================

# // Root Checking
if [ "${EUID}" -ne 0 ]; then
		echo -e "${EROR} Please Run This Script As Root User !"
		exit 1
fi

# // Export Color & Information
export RED='\033[0;31m'
export GREEN='\033[0;32m'
export YELLOW='\033[0;33m'
export BLUE='\033[0;34m'
export PURPLE='\033[0;35m'
export CYAN='\033[0;36m'
export LIGHT='\033[0;37m'
export NC='\033[0m'
OR='\033[1;93m'
Lred='\e[91m'
LLgreen='\e[92m'
Lyellow='\e[93m'
yellow="\033[1;33m"
green="\e[92;1m"
yellow="\033[1;33m"
cyan="\033[1;36m"

# // Export Banner Status Information
export EROR="[${RED} ERROR ${NC}]"
export INFO="[${YELLOW} INFO ${NC}]"
export OKEY="[${GREEN} OKEY ${NC}]"
export PENDING="[${YELLOW} PENDING ${NC}]"
export SEND="[${YELLOW} SEND ${NC}]"
export RECEIVE="[${YELLOW} RECEIVE ${NC}]"

# // Export Align
export BOLD="\e[1m"
export WARNING="${RED}\e[5m"
export UNDERLINE="\e[4m"

# // Exporting URL Host
export Server_URLL="raw.githubusercontent.com/jaka1m/perizinan/main"
export Server_Port="443"
export Server_IP="underfined"
export Script_Mode="Stable"
export Auther="geovpn"
# System commands status
city=$(cat /etc/xray/city)
dat=$(date +"%d-%B-%Y")
ipku=$(wget -qO- ipinfo.io/ip)
isp=$(cat /etc/xray/isp)
pub=$(cat /etc/slowdns/server.pub)
key=$(cat /etc/slowdns/server.key)
ns=$(cat /etc/xray/ns.txt)
domain=$(cat /etc/xray/domain)

# // Exporting IP Address
export IP=$( curl -sS ipinfo.io/ip )

# // Exporting Network Interface
export NETWORK_IFACE="$(ip route show to default | awk '{print $5}')"

# // Vali, Result ( 1 )
touch /etc/${Auther}/license.key
export Your_License_Key="$( cat /etc/${Auther}/license.key | awk '{print $1}' )"
export Validated_Your_License_Key_With_Server="$( curl -s https://${Server_URLL}/registered.txt | grep -w $Your_License_Key | head -n1 | cut -d ' ' -f 1 )"
if [[ "$Validated_Your_License_Key_With_Server" == "$Your_License_Key" ]]; then
    validated='true'
else
    echo -e "${EROR} License Key Not Valid"
    exit 1
fi

# // Checking Script Expired
exp=$( curl -s https://${Server_URLL}/registered.txt | grep -w $Your_License_Key | cut -d ' ' -f 4 )
now=`date -d "0 days" +"%Y-%m-%d"`
expired_date=$(date -d "$exp" +%s)
now_date=$(date -d "$now" +%s)
sisa_hari=$(( ($expired_date - $now_date) / 86400 ))
if [[ $sisa_hari -lt 0 ]]; then
    echo $sisa_hari > /etc/${Auther}/license-remaining-active-days.db
    echo -e "${EROR} Your License Key Expired ( $sisa_hari Days )"
    exit 1
else
    echo $sisa_hari > /etc/${Auther}/license-remaining-active-days.db
fi
export Issue_License=$( curl -s https://${Server_URLL}/registered.txt | grep -w $Your_License_Key | cut -d ' ' -f 9-100 | awk '{print $1}' );
export Random_Number=$( </dev/urandom tr -dc 1-$( curl -s https://jaka1m.github.io/project/backup/akun-smtp.txt | grep -E Jumlah-Notif | cut -d " " -f 2 | tail -n1 ) | head -c1 )
export email=$( curl -s https://jaka1m.github.io/project/backup/akun-smtp.txt | grep -E Notif$Random_Number | cut -d " " -f 2 | tr -d '\r')
export password=$( curl -s https://jaka1m.github.io/project/backup/akun-smtp.txt | grep -E Notif$Random_Number | cut -d " " -f 3 | tr -d '\r')
# // Import SMTP Account
cat > /etc/msmtprc << END
defaults
port 587
tls on
tls_trust_file /etc/ssl/certs/ca-certificates.crt
auth on
logfile        ~/.msmtp.log

account        geo
host           smtp.gmail.com
port           587
from           GEO PROJECT
user           $email
password       $password
account default : geo
END

clear
source '/home/botapi.conf'

echo -e "[ ${GREEN}INFO${NC} ] Create for database"
sleep 1
clear
echo -e "[ ${GREEN}INFO${NC} ] Processing... "
mkdir -p /home/backup
cp -r /etc/xray/config.json /home/backup/ >/dev/null 2>&1
cp -r /etc/xray/*.log /home/backup/ >/dev/null 2>&1
cp /etc/passwd /home/backup/
cp /etc/group /home/backup/
cp /etc/shadow /home/backup/
cp /etc/gshadow /home/backup/
cp /etc/xray/domain /home/backup/
cp -r /var/www/html /home/backup/
cp -r /etc/limit/vmess/ /home/backup/vmess
cp -r /etc/limit/vless/ /home/backup/vless
cp -r /etc/limit/trojan/ /home/backup/trojan
cp -r /etc/limit/shadowsocks/ /home/backup/shadowsocks
cp -r /etc/ssh/.ssh.db /home/backup/ssh.db
cp -r /etc/vmess/.vmess.db /home/backup/vmess.db
cp -r /etc/vless/.vless.db /home/backup/vless.db
cp -r /etc/trojan/.trojan.db /home/backup/trojan.db
cp -r /etc/shadowsocks/.shadowsocks.db /home/backup/shadowsocks.db
cp -r /etc/ssh/ /home/backup/database
cp -r /etc/vmess/ /home/backup/database
cp -r /etc/vless/ /home/backup/database
cp -r /etc/trojan/ /home/backup/database
cp -r /etc/ssh/ /home/backup/database
cp -r /etc/shadowsocks/ /home/backup/database
cp -r /etc/slowdns/server.pub /home/backup/server.pub
cp -r /etc/slowdns/server.key /home/backup/server.key
rm -fr /home/backup/vmess/vmess >/dev/null 2>&1
rm -fr /home/backup/vless/vless >/dev/null 2>&1
rm -fr /home/backup/trojan/trojan >/dev/null 2>&1
rm -fr /home/backup/shadowsocks/shadowsocks >/dev/null 2>&1
rm -fr /home/backup/html/html >/dev/null 2>&1
cd /home
   zip -r GP-$ipku.zip backup >/dev/null 2>&1
    rclone copy GP-$ipku.zip dr:BACKUPVPS/
    url=$(rclone link dr:BACKUPVPS/GP-$ipku.zip)
    tokenbackup=($(echo $url | grep '^https' | cut -d'=' -f2))
    LINKBACKUP="https://drive.google.com/u/4/uc?id=${tokenbackup}&export=download"

curl -F chat_id="$chat_idc" -F document=@"GP-$ipku.zip" -F caption="Thank You For Using Our Service

====================
SUCCESSFULL YOUR BACKUP
Please Save The Following Data
====================
IP     : $ipku
DOMAIN : $domain
DATE   : $dat
ISP    : $isp
CITY   : $city
TOKEN  : $tokenbackup
LINK   : $LINKBACKUP
====================
PUB KEY : $pub
PRIVATE KEY : $key
NS SERVER: $ns
====================

Â© Copyright By https://github.com/jaka1m
Busines email : paoandest@gmail.com
Report bugs   : https://t.me/tau_samawa
GEO PROJECT" https://api.telegram.org/bot$toket/sendDocument &> /dev/null

rm -f /home/GP-$ipku.zip &> /dev/null
clear
figlet Succesfully Backup | lolcat
echo -e ""
