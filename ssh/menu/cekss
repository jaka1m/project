#!/bin/bash
# //====================================================
# //	System Request:Debian 9+/Ubuntu 18.04+/20+
# //	Author:	Geo Project
# //	Dscription: Xray Menu Management
# //	email: admin@geolstore.net
# //  telegram: https://t.me/tau_samawa
# //====================================================

# // Root Checking
if [ "${EUID}" -ne 0 ]; then
		echo -e "${EROR} Please Run This Script As Root User !"
		exit 1
fi

# // Export Color & Information
export RED='\033[0;31m'
export GREEN='\033[0;32m'
export YELLOW='\033[0;33m'
export BLUE='\033[0;34m'
export PURPLE='\033[0;35m'
export CYAN='\033[0;36m'
export LIGHT='\033[0;37m'
export NC='\033[0m'
OR='\033[1;93m'
Lred='\e[91m'
LLgreen='\e[92m'
Lyellow='\e[93m'
yellow="\033[1;33m"
green="\e[92;1m"
yellow="\033[1;33m"
cyan="\033[1;36m"

# // Export Banner Status Information
export EROR="[${RED} ERROR ${NC}]"
export INFO="[${YELLOW} INFO ${NC}]"
export OKEY="[${GREEN} OKEY ${NC}]"
export PENDING="[${YELLOW} PENDING ${NC}]"
export SEND="[${YELLOW} SEND ${NC}]"
export RECEIVE="[${YELLOW} RECEIVE ${NC}]"

# // Export Align
export BOLD="\e[1m"
export WARNING="${RED}\e[5m"
export UNDERLINE="\e[4m"

# // Exporting URL Host
export Server_URLL="raw.githubusercontent.com/jaka1m/perizinan/main"
export Server_Port="443"
export Server_IP="underfined"
export Script_Mode="Stable"
export Auther="geovpn"
MYIP=$(curl -sS ipv4.icanhazip.com)
domain=$(cat /etc/xray/domain)

# // Exporting IP Address
export IP=$( curl -sS ipinfo.io/ip )

# // Exporting Network Interface
export NETWORK_IFACE="$(ip route show to default | awk '{print $5}')"

# // Validate Result ( 1 )
touch /etc/${Auther}/license.key
export Your_License_Key="$( cat /etc/${Auther}/license.key | awk '{print $1}' )"
export Validated_Your_License_Key_With_Server="$( curl -s https://${Server_URLL}/registered.txt | grep -w $Your_License_Key | head -n1 | cut -d ' ' -f 1 )"
if [[ "$Validated_Your_License_Key_With_Server" == "$Your_License_Key" ]]; then
    validated='true'
else
    echo -e "${EROR} License Key Not Valid"
    exit 1
fi

# // Checking Script Expired
exp=$( curl -s https://${Server_URLL}/registered.txt | grep -w $Your_License_Key | cut -d ' ' -f 4 )
now=`date -d "0 days" +"%Y-%m-%d"`
expired_date=$(date -d "$exp" +%s)
now_date=$(date -d "$now" +%s)
sisa_hari=$(( ($expired_date - $now_date) / 86400 ))
if [[ $sisa_hari -lt 0 ]]; then
    echo $sisa_hari > /etc/${Auther}/license-remaining-active-days.db
    echo -e "${EROR} Your License Key Expired ( $sisa_hari Days )"
    exit 1
else
    echo $sisa_hari > /etc/${Auther}/license-remaining-active-days.db
fi
clear
timenow=$(date +%T)
function convert() {
    local -i bytes=$1
    if [[ $bytes -lt 1024 ]]; then
        echo "${bytes}B"
    elif [[ $bytes -lt 1048576 ]]; then
        echo "$(((bytes + 1023) / 1024))KB"
    elif [[ $bytes -lt 1073741824 ]]; then
        echo "$(((bytes + 1048575) / 1048576))MB"
    else
        echo "$(((bytes + 1073741823) / 1073741824))GB"
    fi
}
tim2sec() {
    mult=1
    arg="$1"
    res=0
    while [ ${#arg} -gt 0 ]; do
        prev="${arg%:*}"
        if [ "$prev" = "$arg" ]; then
            curr="${arg#0}"
            prev=""
        else
            curr="${arg##*:}"
            curr="${curr#0}"
        fi
        curr="${curr%%.*}"
        res=$((res + curr * mult))
        mult=$((mult * 60))
        arg="$prev"
    done
    echo "$res"
}
clear
echo -e "${cyan}=======================================${NC}"
printf "\e[1;92m     ⚜⚜\e[0m\e[1;77m Shdwsk User Login Account \e[1;92m⚜⚜\e[0m\n"
echo -e "${cyan}=======================================${NC}"
#echo -e "\033[0;32m   username       usage   quota    ip${NC}"
#echo -e "  ${cyan}=======================================${NC}"
marimakan=($(cat /etc/shadowsocks/.shadowsocks.db | grep '^###' | cut -d ' ' -f 2 | sort | uniq))
echo -n >/tmp/rotate
for db in ${marimakan[@]}; do
    logFile=$(cat /var/log/xray/access.log | grep -w "email: ${db}" | tail -n 150)
    while read a; do
        if [[ -n ${a} ]]; then
            set -- ${a}
            my="${7}"
            res="${2}"
            makansate="${3}"
            ult=$(echo "${makansate}" | sed 's/tcp://g' | sed '/^$/d' | cut -d. -f1,2,3)
            now=$(tim2sec ${timenow})
            sateeeee=$(tim2sec ${res})
            nowt=$(((${now} - ${sateeeee})))
            if [[ ${nowt} -lt 40 ]]; then
                cat /tmp/rotate | grep -w "${my}" | grep -w "${ult}" >/dev/null
                if [[ $? -eq 1 ]]; then
                    echo "${my} ${res} ${ult}" >>/tmp/rotate
                    split=$(cat /tmp/rotate)
                fi
            fi
        fi
    done <<<"${logFile}"
done
if [[ ${split} != "" ]]; then
    for user in ${marimakan[@]}; do
        result=$(cat /tmp/rotate | grep -w "${user}" | wc -l)
        if [[ ${result} -gt 0 ]]; then
            if [[ -e /etc/limit/shadowsocks/${user} ]]; then
                byt=$(cat /etc/limit/shadowsocks/${user})
                gb=$(convert ${byt})
            else
                gb=""
            fi
            if [[ -e /etc/shadowsocks/${user} ]]; then
                byte=$(cat /etc/shadowsocks/${user})
                lim=$(convert ${byte})
                lastlogin=$(cat /var/log/xray/access.log | grep -w "$akun" | tail -n 500 | cut -d " " -f 2 | tail -1)
                 echo -e " \e[032;1mAccount\e[0m    : ${yellow}$user${NC}"
                 echo -e " \e[032;1mUsage\e[0m      : ${yellow}${gb}${NC}"
                 echo -e " \e[032;1mLimit\e[0m      : ${yellow}${lim}${NC}"
                 echo -e " \e[032;1mIP Login\e[0m   : ${yellow}${result}${NC}"
                 echo -e " \e[032;1mLast Login\e[0m : ${yellow}${lastlogin}${NC}"
                 echo -e "${cyan}=======================================\033[0m"
                 #printf "  %-13s %-7s %-8s %2s\n" "${user}" "${gb}" "${lim}" "${result} IP"
                #printf "\e[1m  %-13s %-7s %-8s %2s\n\e[22m" " ${user}" "| ${gb}" "|  ${lim}" "|  ${result}"
                #printf "$cyan  %-13s %-7s %-8s %2s\n${cyan}${NC}" "======================================="
            fi
        fi
    done
fi
echo ""
read -n 1 -s -r -p "Press any key to back on menu"
menu